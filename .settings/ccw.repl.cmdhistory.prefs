cmdhistory=[";; Switching to GeneticJVM.core namespace" "(+ 2 3)" "(defn welcome\\r\\n  [x]\\r\\n  (println \\"Welcome To The Clojure Age, \\" x))" "(welcome \\"inbar\\")" "'(welcome \\"inbar\\")" "(welcome 'inbar)" "(welcome inbar)" "(welcome 'inbar)" "'(welcome inbar)" "(rand 1)" "(rand-int 1)" "(rand-int 2)" "\\n[\\"a\\" \\"b\\" \\"c\\"]" "(rand-nth [\\"a\\" \\"b\\" \\"c\\"])" "[\\"a\\" \\"b\\" \\"c\\"]" "\=> (rand-nth [\\"a\\" \\"b\\" \\"c\\"])" "(rand-nth [\\"a\\" \\"b\\" \\"c\\"])" "abc\= (rand-nth [\\"a\\" \\"b\\"])" "(\= abc (rand-nth [\\"a\\" \\"b\\"]))" "(\:abc [\\"a\\" \\"b\\"])" "\:abc" "\:abc\= [\\"a\\" \\"b\\"]" "\:abc" "abc" "{\:abc [\\"a\\" \\"b\\" \\"c\\"]}" "\:abc" "(map a {\:abc [\\"a\\" \\"b\\" \\"c\\"]})" "(keywork abc)" "(keyword abc)" "(def abc {\\"a\\" \\"b\\" \\"c\\"})" "(def a-b-c-Map {\:a \\r\\n                           {\:b \\r\\n                               {\:c 6}\\r\\n                             }\\r\\n                        })" "a-b-c-Map" "\\n(def abc {\:a \\"a\\",\:b \\"b\\",\:c \\"c\\"})" "abc" "(abc \:a)" "(rand-nth abc)" "(def abc [ \:a \\"a\\",\:b \\"b\\",\:c \\"c\\"])" "abc" "(abc \:a)" "(def abc [\\"a\\" \\"b\\" \\"c\\" \\"d\\" \\"e\\" \\"f\\" \\"g\\" \\"h\\" \\"i\\" \\"j\\" \\"k\\" \\"l\\" \\"m\\" \\"n\\" \\"o\\" \\"p\\" \\"q\\" \\"r\\" \\"s\\" \\"t\\" \\"u\\" \\"v\\" \\"w\\" \\"x\\" \\"y\\" \\"z\\"])" "abc" "\\n(rand-nth abc)" "(rand-nth abc)" "(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)" "(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)(rand-nth abc)" "(range \\"a\\" \\"z\\")" "(for [x [0 1 2 3 4 5]\\n      \:let [y (* x 3)]\\n      \:when (even? y)]\\n  y)" "(def person [])" "person" "(dotimes [n 15] \\n  (def person \\n    (conj person \\n          (rand-nth abc)\\n    )\\n  )\\n)" "PERSON" "person" "(dotimes [n 15] \\r\\n     (def person \\r\\n       (conj person \\r\\n             (rand-nth abc)\\r\\n       )\\r\\n     )\\r\\n   )" "person" "(str person)" "person" "(format pattern person)" "(def pattern \\"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\\")" "\=> (format pattern person)" "(format pattern person)" "(str person)" "(dotimes [n PopulationSize]\\r\\n  (\\r\\n\\t\\t(def Person [])\\r\\n\\t\\t(dotimes [n 15] \\r\\n\\t\\t  (def person \\r\\n\\t\\t    (conj person \\r\\n\\t\\t          (rand-nth abc)\\r\\n\\t\\t    )\\r\\n\\t\\t  )\\r\\n\\t\\t)\\r\\n  )\\r\\n)"]
eclipse.preferences.version=1
